/**
 * @fileoverview gRPC-Web generated client stub for blog
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: blog.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as blog_pb from './blog_pb';


export class BlogServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateMethod = new grpcWeb.MethodDescriptor(
    '/blog.BlogService/CreateMethod',
    grpcWeb.MethodType.UNARY,
    blog_pb.CreateRequest,
    blog_pb.CreateResponse,
    (request: blog_pb.CreateRequest) => {
      return request.serializeBinary();
    },
    blog_pb.CreateResponse.deserializeBinary
  );

  createMethod(
    request: blog_pb.CreateRequest,
    metadata: grpcWeb.Metadata | null): Promise<blog_pb.CreateResponse>;

  createMethod(
    request: blog_pb.CreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: blog_pb.CreateResponse) => void): grpcWeb.ClientReadableStream<blog_pb.CreateResponse>;

  createMethod(
    request: blog_pb.CreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: blog_pb.CreateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/blog.BlogService/CreateMethod',
        request,
        metadata || {},
        this.methodDescriptorCreateMethod,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/blog.BlogService/CreateMethod',
    request,
    metadata || {},
    this.methodDescriptorCreateMethod);
  }

  methodDescriptorLoginMethod = new grpcWeb.MethodDescriptor(
    '/blog.BlogService/LoginMethod',
    grpcWeb.MethodType.UNARY,
    blog_pb.LoginRequest,
    blog_pb.LoginResponse,
    (request: blog_pb.LoginRequest) => {
      return request.serializeBinary();
    },
    blog_pb.LoginResponse.deserializeBinary
  );

  loginMethod(
    request: blog_pb.LoginRequest,
    metadata: grpcWeb.Metadata | null): Promise<blog_pb.LoginResponse>;

  loginMethod(
    request: blog_pb.LoginRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: blog_pb.LoginResponse) => void): grpcWeb.ClientReadableStream<blog_pb.LoginResponse>;

  loginMethod(
    request: blog_pb.LoginRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: blog_pb.LoginResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/blog.BlogService/LoginMethod',
        request,
        metadata || {},
        this.methodDescriptorLoginMethod,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/blog.BlogService/LoginMethod',
    request,
    metadata || {},
    this.methodDescriptorLoginMethod);
  }

  methodDescriptorListBlogs = new grpcWeb.MethodDescriptor(
    '/blog.BlogService/ListBlogs',
    grpcWeb.MethodType.UNARY,
    blog_pb.ListBlogsRequest,
    blog_pb.ListBlogsResponse,
    (request: blog_pb.ListBlogsRequest) => {
      return request.serializeBinary();
    },
    blog_pb.ListBlogsResponse.deserializeBinary
  );

  listBlogs(
    request: blog_pb.ListBlogsRequest,
    metadata: grpcWeb.Metadata | null): Promise<blog_pb.ListBlogsResponse>;

  listBlogs(
    request: blog_pb.ListBlogsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: blog_pb.ListBlogsResponse) => void): grpcWeb.ClientReadableStream<blog_pb.ListBlogsResponse>;

  listBlogs(
    request: blog_pb.ListBlogsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: blog_pb.ListBlogsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/blog.BlogService/ListBlogs',
        request,
        metadata || {},
        this.methodDescriptorListBlogs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/blog.BlogService/ListBlogs',
    request,
    metadata || {},
    this.methodDescriptorListBlogs);
  }

  methodDescriptorDeleteBlog = new grpcWeb.MethodDescriptor(
    '/blog.BlogService/DeleteBlog',
    grpcWeb.MethodType.UNARY,
    blog_pb.DeleteBlogRequest,
    blog_pb.DeleteBlogResponse,
    (request: blog_pb.DeleteBlogRequest) => {
      return request.serializeBinary();
    },
    blog_pb.DeleteBlogResponse.deserializeBinary
  );

  deleteBlog(
    request: blog_pb.DeleteBlogRequest,
    metadata: grpcWeb.Metadata | null): Promise<blog_pb.DeleteBlogResponse>;

  deleteBlog(
    request: blog_pb.DeleteBlogRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: blog_pb.DeleteBlogResponse) => void): grpcWeb.ClientReadableStream<blog_pb.DeleteBlogResponse>;

  deleteBlog(
    request: blog_pb.DeleteBlogRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: blog_pb.DeleteBlogResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/blog.BlogService/DeleteBlog',
        request,
        metadata || {},
        this.methodDescriptorDeleteBlog,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/blog.BlogService/DeleteBlog',
    request,
    metadata || {},
    this.methodDescriptorDeleteBlog);
  }

  methodDescriptorReadDetails = new grpcWeb.MethodDescriptor(
    '/blog.BlogService/ReadDetails',
    grpcWeb.MethodType.UNARY,
    blog_pb.DetailesRequest,
    blog_pb.DetailesResponse,
    (request: blog_pb.DetailesRequest) => {
      return request.serializeBinary();
    },
    blog_pb.DetailesResponse.deserializeBinary
  );

  readDetails(
    request: blog_pb.DetailesRequest,
    metadata: grpcWeb.Metadata | null): Promise<blog_pb.DetailesResponse>;

  readDetails(
    request: blog_pb.DetailesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: blog_pb.DetailesResponse) => void): grpcWeb.ClientReadableStream<blog_pb.DetailesResponse>;

  readDetails(
    request: blog_pb.DetailesRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: blog_pb.DetailesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/blog.BlogService/ReadDetails',
        request,
        metadata || {},
        this.methodDescriptorReadDetails,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/blog.BlogService/ReadDetails',
    request,
    metadata || {},
    this.methodDescriptorReadDetails);
  }

}

